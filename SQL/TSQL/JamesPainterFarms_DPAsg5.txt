-- Student Registration Creation Script
-- James Painter 6/15/2016
-- Comments

USE Master 

IF EXISTS(SELECT * FROM sysdatabases WHERE name ='Painter_FARMS')
DROP DATABASE Painter_FARMS

GO

CREATE DATABASE Painter_FARMS

ON PRIMARY 

(
NAME = 'Painter_FARMS', 
--FILENAME = 'C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\Painter_FARMS.mdf',
FILENAME = 'C:\Stage\Painter_FARMS.mdf',
SIZE = 4MB, 
MAXSIZE = 4MB,
FILEGROWTH= 500KB
)

LOG ON 

(
NAME = 'Painter_FARMS_Log', 
FILENAME = 'C:\Stage\Painter_FARMS.ldf',
SIZE = 4MB, 
MAXSIZE = 4MB, 
FILEGROWTH = 500KB
)
Go

--Create Tables
USE Painter_FARMS

CREATE TABLE GUEST
(
GuestID				smallint	NOT NULL	IDENTITY(1500,1), 
GuestFirstName		varchar(20)	NOT NULL,
GuestLastName		varchar(20)	NOT NULL, 
GuestAddress1		varchar(30)	NOT NULL,
GuestAddress2		varchar(10) NULL, 
GuestCity			varchar(20) NOT NULL, 
GuestState			varchar(2) NULL, 
GuestPostalCode		char(10) NOT NULL, 
GuestCountry		varchar(20) NOT NULL, 
GuestPhone			varchar(20) NOT NULL, 
GuestEmail			varchar(30) NULL,
GuestComments		varchar(200) NULL	
)


CREATE TABLE ROOMTYPE
(
RoomTypeID			smallint NOT NULL	IDENTITY(1,1), 
RTDescription		varchar(200)	NOT NULL,

)


CREATE TABLE TAXRATE
(
TaxLocationID		smallint NOT NULL IDENTITY(1,1), 
TaxDescription		varchar(30) NOT NULL, 
RoomTaxRate			decimal(6,4),
SalesTaxRate		decimal(6,4),
)

CREATE TABLE BILLINGCATEGORY
(
BillingCategoryID		smallint NOT NULL IDENTITY(1,1), 
BillingCatDescription	varchar(30) NOT NULL, 
BillingCatTaxable		bit	NOT NULL
)

CREATE TABLE DISCOUNT
(
DiscountID			smallint NOT NULL IDENTITY(1,1), 
DiscountDescription	varchar(50) NOT NULL, 
DiscountExpiration	date NOT NULL,
DiscountRules		varchar(100) NULL, 
DiscountPercent		decimal(4,2) NULL, 
DiscountAmount		smallmoney NULL
)

CREATE TABLE CREDITCARD
(
CreditCardID		smallint NOT NULL IDENTITY(1,1), 
GuestID				smallint NOT NULL, 
CCTYPE				varchar(5) NOT NULL, 
CCNumber			varchar(16) NOT NULL, 
CCCompany			varchar(40) NULL, 
CCCardHolder		varchar(40) NOT NULL, 
CCExpiration		smalldatetime NOT NULL, 
)

CREATE TABLE RESERVATION
(
ReservationID		smallint NOT NULL IDENTITY(5000,1),
ReservationDate		date	NOT NULL, 
ReservationStatus	char(1) NOT NULL,
ReservationComments	varchar(200) NULL, 
CreditCardID		smallint NOT NULL, 
)

CREATE TABLE FOLIO
(
FolioID				smallint NOT NULL IDENTITY(1,1),
ReservationID		smallint NOT NULL, 
GuestID				smallint NOT NULL, 
RoomID				smallint NOT NULL, 
QuotedRate			smallmoney NOT NULL, 
CheckinDate			smalldatetime NOT NULL, 
Nights				tinyint NOT NULL, 
Status				char(1) NOT NULL, 
Comments			varchar(200) NULL, 
DiscountID			smallint NOT NULL				
)

CREATE TABLE PAYMENT 
(
PaymentID			smallint NOT NULL IDENTITY(8000,1),
FolioID				smallint NOT NULL, 
PaymentDate			date NOT NULL, 
PaymentAmount		smallmoney NOT NULL, 
PaymentComments		varchar(200) NULL
)

CREATE TABLE ROOM 
(
RoomID				 smallint NOT NULL IDENTITY(1,1), 
RoomNumber			 varchar(5) NOT NULL, 
RoomDescription		 varchar(200) NOT NULL, 
RoomSmoking			 bit NOT NULL, 
RoomBedConfiguration char(2) NOT NULL, 
HotelID				 smallint NOT NULL,
RoomTypeID			smallint NOT NULL
)

CREATE TABLE BILLING 
(
FolioBillingID	smallint NOT NULL IDENTITY(1,1),
FolioID					smallint NOT NULL, 
BillingCategoryID		smallint NOT NULL, 
BillingDescription		char(30) NOT NULL, 
BillingAmount			smallmoney NOT NULL, 
BillingItemQty			tinyint NOT NULL, 
BillingItemDate			date NOT NULL
)

CREATE TABLE HOTEL
(
HotelID				smallint NOT NULL, 
HotelName			varchar(30) NOT NULL, 
HotelAddress		varchar(30) NOT NULL, 
HotelCity			varchar(20)	NOT NULL, 
HotelState			varchar(2)	NULL, 
HotelCountry		varchar(20) NOT NULL, 
HotelPostalCode		char(10) NOT NULL, 
HotelStarRating		char(1) NULL, 
HotelPictureLink	varchar(100) NULL, 
TaxLocationID		smallint NOT NULL
)

CREATE TABLE RACKRATE 
(
RackRateID			smallint NOT NULL IDENTITY(1,1), 
RoomTypeID			smallint NOT NULL, 
HotelID				smallint NOT NULL, 
RackRate			smallmoney NOT NULL, 
RackRateBegin		date NOT NULL, 
RackRateEnd			date NOT NULL,
RackRateDescription	varchar(200) NOT NULL 
)
Go

-- Create Primary Keys

ALTER TABLE GUEST
	ADD CONSTRAINT PK_GGuestID
	PRIMARY KEY	(GuestID)

ALTER TABLE ROOMTYPE
	ADD CONSTRAINT PK_RTRoomTypeID
	PRIMARY KEY (RoomTypeID)

ALTER TABLE TAXRATE
	ADD CONSTRAINT PK_TRTaxLocationID
	PRIMARY KEY (TaxLocationID)

ALTER TABLE BILLINGCATEGORY
	ADD CONSTRAINT PK_BCBillingCategoryID
	PRIMARY KEY (BillingCategoryID) 

ALTER TABLE DISCOUNT
	ADD CONSTRAINT PK_DDiscountID
	PRIMARY KEY (DiscountID) 

ALTER TABLE CREDITCARD
	ADD CONSTRAINT PK_CCCreditCardID
	PRIMARY KEY (CreditCardID)

ALTER TABLE RESERVATION
	ADD CONSTRAINT PK_RReservationID
	PRIMARY KEY (ReservationID) 

ALTER TABLE FOLIO
	ADD CONSTRAINT PK_FFolioID
	PRIMARY KEY (FolioID) 

ALTER TABLE PAYMENT 
	ADD CONSTRAINT PK_PPaymentID
	PRIMARY KEY (PaymentID) 

ALTER TABLE ROOM
	ADD CONSTRAINT PK_RRoomID
	PRIMARY KEY (RoomID) 

ALTER TABLE BILLING
	ADD CONSTRAINT PK_BFolioBillingID
	PRIMARY KEY	(FolioBillingID)

ALTER TABLE HOTEL
	ADD CONSTRAINT PK_HHotelID
	PRIMARY KEY	(HotelID) 

ALTER TABLE RACKRATE
	ADD CONSTRAINT PK_RRackRateID
	PRIMARY KEY (RackRateID) 

GO

-- CREATE FOREIGN KEYS 

ALTER TABLE CREDITCARD
ADD
CONSTRAINT FK_CCGuestID
FOREIGN KEY (GuestID) REFERENCES GUEST (GuestID)
ON UPDATE Cascade
ON DELETE Cascade


ALTER TABLE RESERVATION
ADD
CONSTRAINT FK_RCreditCardID
FOREIGN KEY (CreditCardID) REFERENCES CREDITCARD (CreditCardID)
ON UPDATE Cascade
ON DELETE Cascade


ALTER TABLE FOLIO
ADD
CONSTRAINT FK_FReservationID
FOREIGN KEY (ReservationID) REFERENCES RESERVATION (ReservationID) 
ON UPDATE Cascade
ON DELETE Cascade,

CONSTRAINT FK_FRoomID
FOREIGN KEY (RoomID) REFERENCES ROOM (RoomID) 
ON UPDATE Cascade
ON DELETE Cascade,

CONSTRAINT FK_FDiscountID
FOREIGN KEY (DiscountID) REFERENCES DISCOUNT (DiscountID)
ON UPDATE Cascade
ON DELETE Cascade


ALTER TABLE PAYMENT
ADD
CONSTRAINT FK_PFolioID
FOREIGN KEY (FolioID) REFERENCES FOLIO (FolioID)
ON UPDATE Cascade
ON DELETE Cascade


ALTER TABLE ROOM
ADD
CONSTRAINT FK_RHotelID
FOREIGN KEY (HotelID) REFERENCES HOTEL (HotelID)
ON UPDATE Cascade
ON DELETE Cascade,

CONSTRAINT FK_RTRoomID
FOREIGN KEY (RoomTypeID) REFERENCES ROOMTYPE (RoomTypeID) 
ON UPDATE Cascade 
ON DELETE Cascade 



ALTER TABLE BILLING
ADD
CONSTRAINT FK_BFolioID
FOREIGN KEY (FolioID) REFERENCES FOLIO (FolioID)
ON UPDATE Cascade
ON DELETE Cascade,
 

CONSTRAINT FK_BBillingCategoryID
FOREIGN KEY (BillingCategoryID) REFERENCES BILLINGCATEGORY (BillingCategoryID)
ON UPDATE Cascade
ON DELETE Cascade


ALTER TABLE HOTEL
ADD
CONSTRAINT FK_HTaxLocationID
FOREIGN KEY (TaxLocationID)	REFERENCES TAXRATE (TaxLocationID)
ON UPDATE Cascade
ON DELETE Cascade

ALTER TABLE RACKRATE
ADD
CONSTRAINT FK_RRRoomTypeID
FOREIGN KEY (RoomTypeID) REFERENCES ROOMTYPE (RoomTypeID)
ON UPDATE Cascade
ON DELETE Cascade,
 

CONSTRAINT FK_RRHotelID
FOREIGN KEY (HotelID) REFERENCES HOTEL (HotelID) 
ON UPDATE Cascade
ON DELETE Cascade

GO 

-- Check and Balances 

ALTER TABLE RESERVATION
ADD CONSTRAINT CK_RReservationStatus
CHECK(ReservationStatus IN('R','A','B','C','X'))

ALTER TABLE FOLIO
ADD CONSTRAINT CK_FStatus
CHECK(Status IN('R','A','B','C','X'))

ALTER TABLE ROOM
ADD CONSTRAINT CK_RRoomBedConfiguration
CHECK(RoomBedConfiguration IN('K','Q','2Q','2K','2F'))

GO

--BULK INSERT

--SELECT * 
--FROM ROOM

BULK INSERT BILLING FROM 'C:\stage\Billing.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)

BULK INSERT BILLINGCATEGORY FROM 'C:\stage\BillingCategory.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)

BULK INSERT CREDITCARD FROM 'C:\stage\CreditCard.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)

BULK INSERT DISCOUNT FROM 'C:\stage\Discount.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)

BULK INSERT FOLIO FROM 'C:\stage\Folio.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)

BULK INSERT GUEST FROM 'C:\stage\Guest.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)

BULK INSERT HOTEL FROM 'C:\stage\Hotel.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)

BULK INSERT PAYMENT FROM 'C:\stage\Payment.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)

BULK INSERT RACKRATE FROM 'C:\stage\RackRate.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)

BULK INSERT RESERVATION FROM 'C:\stage\Reservation.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)

BULK INSERT ROOM FROM 'C:\stage\Room.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)

BULK INSERT ROOMTYPE FROM 'C:\stage\RoomType.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)

BULK INSERT TAXRATE FROM 'C:\stage\TaxRate.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)

GO


USE Painter_FARMS

PRINT 'Problem 1. Beginning #1 - Im inserting myself as a new guest...'

GO 

INSERT
INTO GUEST (GuestFirstName, GuestLastName, GuestAddress1, GuestAddress2, GuestCity, GuestState, GuestPostalCode, GuestCountry, GuestPhone, GuestEmail, GuestComments)
VALUES('James', 'Painter', '3575 Iowa Ave.',NULL,'Ogden', 'UT', '84403', 'US', '385-282-9293', 'jamespainter@mail.weber.edu', 'Guest');  
SELECT @@IDENTITY
GO

PRINT 'Here is the result of the Guest Table after I inserted myself...'

PRINT ''

SELECT * FROM GUEST

GO

PRINT ' NEW CREDIT CARD using @@IDENTITY value for the FK GUESTID'


INSERT 
INTO CREDITCARD (GuestID, CCTYPE, CCNumber, CCCompany, CCCardHolder, CCExpiration)
VALUES(@@IDENTITY, 'VISA', '2345345623452345', NULL, 'James Painter', 'Jan, 06, 2026')

--DELETE
--FROM CREDITCARD
--WHERE GuestID = 1506

--SELECT @@IDENTITY

--SELECT * FROM CREDITCARD

PRINT 'Problem 2. Update rack rates based on todays date' 

SELECT RackRate AS 'ROOM RATE'
FROM RACKRATE
WHERE RackRateBegin < GETDATE() AND RackRateEnd > GETDATE() 
ORDER BY [ROOM RATE]

PRINT ' Problem 3. Increase RACKRATE by 10% if RoomTypeID =1' 
--UPDATE RACKRATE
--SET RackRate = (RackRate * .10) + RackRate
--WHERE RoomTypeID = 1

UPDATE RACKRATE
SET RackRate = ROUND(CEILING((RackRate * .10) + RackRate), 9)
WHERE RoomTypeID = 1

SELECT RoomTypeID AS 'ROOM TYPE', RackRate AS 'INCREASED RACKRATE'
FROM RACKRATE
WHERE RoomTypeID = 1
ORDER BY [INCREASED RACKRATE]

PRINT 'Decrease RACKRATE by 10% if RoomTypeID = 3 or 4'

UPDATE RACKRATE
SET RackRate = ROUND(FLOOR(RackRate - (RackRate * .10)), 9)
WHERE RoomTypeID BETWEEN 3 AND 4

SELECT RoomTypeID AS 'ROOM TYPE', RackRate AS 'DECREASED RACKRATE'
FROM RACKRATE
WHERE RoomTypeID BETWEEN 3 AND 4
ORDER BY [ROOM TYPE]

--SELECT ROUND(CEILING((RackRate * .10) + RackRate), 9)
--FROM RACKRATE
--WHERE RoomTypeID = 1

--SELECT RoomTypeID, ROUND(FLOOR(RackRate - (RackRate * .10)), 9) AS 'DECREASED RACKRATE'
--FROM RACKRATE
--WHERE RoomTypeID BETWEEN 3 AND 4
--ORDER BY [DECREASED RACKRATE]

INSERT
INTO DISCOUNT (DiscountDescription, DiscountExpiration, DiscountRules, DiscountPercent, DiscountAmount)
VALUES ('Student Coupon','7/31/2016','Any stay over $200 and student must be enrolled in CS 3550', 0.00, 35.50)

SELECT * 
FROM DISCOUNT



PRINT 'Problem 4. SELECT Statement to Determine RackRate and Nightly Tax for Room 302 at Sunridge'

--SELECT r.RackRate AS 'RACK RATE', t.RoomTaxRate AS 'Nightly Tax' 
--FROM TAXRATE AS t
--JOIN HOTEL AS h
--ON t.TaxLocationID = h.TaxLocationID
--JOIN RACKRATE r
--ON h.HotelID = r.HotelID
--JOIN ROOMTYPE rt
--ON r.RoomTypeID = rt.RoomTypeID
--JOIN ROOM rm
--ON rt.RoomTypeID = rm.RoomTypeID
--WHERE rm.RoomNumber = 302 AND h.HotelID = 2100 AND RackRateBegin <= '6/26/16' AND RackRateEnd >= '7/31/16'
GO

CREATE VIEW rr_RoomRate
AS
SELECT (SELECT r.RackRate)+( SELECT t.RoomTaxRate) AS 'ROOM RATE' 
FROM TAXRATE AS t
JOIN HOTEL AS h
ON t.TaxLocationID = h.TaxLocationID
JOIN RACKRATE r
ON h.HotelID = r.HotelID
JOIN ROOMTYPE rt
ON r.RoomTypeID = rt.RoomTypeID
JOIN ROOM rm
ON rt.RoomTypeID = rm.RoomTypeID
WHERE rm.RoomNumber = 302 AND h.HotelID = 2100 AND RackRateBegin <= '6/26/16' AND RackRateEnd >= '7/31/16'

GO

SELECT (SELECT r.RackRate)+( SELECT t.RoomTaxRate) AS 'ROOM RATE' 
FROM TAXRATE AS t
JOIN HOTEL AS h
ON t.TaxLocationID = h.TaxLocationID
JOIN RACKRATE r
ON h.HotelID = r.HotelID
JOIN ROOMTYPE rt
ON r.RoomTypeID = rt.RoomTypeID
JOIN ROOM rm
ON rt.RoomTypeID = rm.RoomTypeID
WHERE rm.RoomNumber = 302 AND h.HotelID = 2100 AND RackRateBegin <= '6/26/16' AND RackRateEnd >= '7/31/16'



GO

PRINT 'Problem 5 Make Master Reservation' 

INSERT
INTO RESERVATION (ReservationDate, ReservationStatus, ReservationComments,CreditCardID)
VALUES(GETDATE(), 'R', NULL, 11)

GO

INSERT
INTO FOLIO (ReservationID, GuestID, RoomID,QuotedRate,CheckinDate,Nights,Status,DiscountID)
VALUES(@@IDENTITY,1506, 12, (SELECT[ROOM RATE] from rr_RoomRate), '6/26/16', 3, 'R', 10)

GO

INSERT
INTO FOLIO (ReservationID, GuestID, RoomID,QuotedRate,CheckinDate,Nights,Status,DiscountID)
VALUES(5020,1506, 13, (SELECT[ROOM RATE] from rr_RoomRate), '7/06/16', 3, 'R', 10)

GO

SELECT * 
FROM RESERVATION

SELECT * 
FROM FOLIO

GO 

PRINT '6.) Display the hotel name, room number (not id), room description & rack rate' 

SELECT h.HotelName, rm.RoomNumber, rm.RoomDescription, '$'+ CAST(r.RackRate AS varchar(10)) AS 'RACK RATE'--, r.RackRateBegin, r.RackRateEnd 
FROM TAXRATE AS t
JOIN HOTEL AS h
ON t.TaxLocationID = h.TaxLocationID
JOIN RACKRATE r
ON h.HotelID = r.HotelID
JOIN ROOMTYPE rt
ON r.RoomTypeID = rt.RoomTypeID
JOIN ROOM rm
ON rt.RoomTypeID = rm.RoomTypeID
WHERE r.RackRate > 138.00 AND DATEPART(m,r.RackRateBegin) <= 7 AND DATEPART(m,r.RackRateEnd) >= 7
ORDER BY r.RackRate ASC

GO

PRINT '7.) FOR EACH Hotel list the first word only of the hotel name and the count of rooms by floor'

--SELECT * 
--FROM HOTEL

--SELECT *
--FROM ROOM 




SELECT (SELECT SUBSTRING(h.HotelName,1,PATINDEX('%[A-Za-z] %', h.HotelName)))AS 'HOTEL', COUNT(SUBSTRING(rm.RoomNumber,1,1)) AS 'NUMBER OF ROOMS', 'Floor 1' AS 'Floor'
FROM HOTEL h
JOIN RACKRATE r
ON h.HotelID = r.HotelID
JOIN ROOMTYPE rr
ON r.RoomTypeID = rr.RoomTypeID
JOIN ROOM rm
ON rr.RoomTypeID = rm.RoomTypeID
WHERE SUBSTRING(h.HotelName,1,PATINDEX('%[A-Za-z] %', h.HotelName)) = 'Sunridge' AND SUBSTRING(rm.RoomNumber,1,1) =1
GROUP BY h.HotelName
UNION
SELECT (SELECT SUBSTRING(h.HotelName,1,PATINDEX('%[A-Za-z] %', h.HotelName)))AS 'HOTEL', COUNT(SUBSTRING(rm.RoomNumber,1,1)) AS 'NUMBER OF ROOMS', 'Floor 2' AS 'Floor'
FROM HOTEL h
JOIN RACKRATE r
ON h.HotelID = r.HotelID
JOIN ROOMTYPE rr
ON r.RoomTypeID = rr.RoomTypeID
JOIN ROOM rm
ON rr.RoomTypeID = rm.RoomTypeID
WHERE SUBSTRING(h.HotelName,1,PATINDEX('%[A-Za-z] %', h.HotelName)) = 'Sunridge' AND SUBSTRING(rm.RoomNumber,1,1) =2
GROUP BY h.HotelName
UNION
SELECT (SELECT SUBSTRING(h.HotelName,1,PATINDEX('%[A-Za-z] %', h.HotelName)))AS 'HOTEL', COUNT(SUBSTRING(rm.RoomNumber,1,1)) AS 'NUMBER OF ROOMS', 'Floor 3' AS 'Floor'
FROM HOTEL h
JOIN RACKRATE r
ON h.HotelID = r.HotelID
JOIN ROOMTYPE rr
ON r.RoomTypeID = rr.RoomTypeID
JOIN ROOM rm
ON rr.RoomTypeID = rm.RoomTypeID
WHERE SUBSTRING(h.HotelName,1,PATINDEX('%[A-Za-z] %', h.HotelName)) = 'Sunridge' AND SUBSTRING(rm.RoomNumber,1,1) =3
GROUP BY h.HotelName
UNION
SELECT (SELECT SUBSTRING(h.HotelName,1,PATINDEX('%[A-Za-z] %', h.HotelName)))AS 'HOTEL', COUNT(SUBSTRING(rm.RoomNumber,1,1)) AS 'NUMBER OF ROOMS', 'Floor 1' AS 'Floor'
FROM HOTEL h
JOIN RACKRATE r
ON h.HotelID = r.HotelID
JOIN ROOMTYPE rr
ON r.RoomTypeID = rr.RoomTypeID
JOIN ROOM rm
ON rr.RoomTypeID = rm.RoomTypeID
WHERE SUBSTRING(h.HotelName,1,PATINDEX('%[A-Za-z] %', h.HotelName)) = 'Pioneer' AND SUBSTRING(rm.RoomNumber,1,1) =1
GROUP BY h.HotelName
UNION
SELECT (SELECT SUBSTRING(h.HotelName,1,PATINDEX('%[A-Za-z] %', h.HotelName)))AS 'HOTEL', COUNT(SUBSTRING(rm.RoomNumber,1,1)) AS 'NUMBER OF ROOMS', 'Floor 2' AS 'Floor'
FROM HOTEL h
JOIN RACKRATE r
ON h.HotelID = r.HotelID
JOIN ROOMTYPE rr
ON r.RoomTypeID = rr.RoomTypeID
JOIN ROOM rm
ON rr.RoomTypeID = rm.RoomTypeID
WHERE SUBSTRING(h.HotelName,1,PATINDEX('%[A-Za-z] %', h.HotelName)) = 'Pioneer' AND SUBSTRING(rm.RoomNumber,1,1) =2
GROUP BY h.HotelName
UNION
SELECT (SELECT SUBSTRING(h.HotelName,1,PATINDEX('%[A-Za-z] %', h.HotelName)))AS 'HOTEL', COUNT(SUBSTRING(rm.RoomNumber,1,1)) AS 'NUMBER OF ROOMS', 'Floor 3' AS 'Floor'
FROM HOTEL h
JOIN RACKRATE r
ON h.HotelID = r.HotelID
JOIN ROOMTYPE rr
ON r.RoomTypeID = rr.RoomTypeID
JOIN ROOM rm
ON rr.RoomTypeID = rm.RoomTypeID
WHERE SUBSTRING(h.HotelName,1,PATINDEX('%[A-Za-z] %', h.HotelName)) = 'Pioneer' AND SUBSTRING(rm.RoomNumber,1,1) =3
GROUP BY h.HotelName
UNION
SELECT (SELECT SUBSTRING(h.HotelName,1,PATINDEX('%[A-Za-z] %', h.HotelName)))AS 'HOTEL', COUNT(SUBSTRING(rm.RoomNumber,1,1)) AS 'NUMBER OF ROOMS', 'Floor 1' AS 'Floor'
FROM HOTEL h
JOIN RACKRATE r
ON h.HotelID = r.HotelID
JOIN ROOMTYPE rr
ON r.RoomTypeID = rr.RoomTypeID
JOIN ROOM rm
ON rr.RoomTypeID = rm.RoomTypeID
WHERE SUBSTRING(h.HotelName,1,PATINDEX('%[A-Za-z] %', h.HotelName)) = 'Weber' AND SUBSTRING(rm.RoomNumber,1,1) = 1
GROUP BY h.HotelName
UNION
SELECT (SELECT SUBSTRING(h.HotelName,1,PATINDEX('%[A-Za-z] %', h.HotelName)))AS 'HOTEL', COUNT(SUBSTRING(rm.RoomNumber,1,1)) AS 'NUMBER OF ROOMS', 'Floor 2' AS 'Floor'
FROM HOTEL h
JOIN RACKRATE r
ON h.HotelID = r.HotelID
JOIN ROOMTYPE rr
ON r.RoomTypeID = rr.RoomTypeID
JOIN ROOM rm
ON rr.RoomTypeID = rm.RoomTypeID
WHERE SUBSTRING(h.HotelName,1,PATINDEX('%[A-Za-z] %', h.HotelName)) = 'Weber' AND SUBSTRING(rm.RoomNumber,1,1) = 2
GROUP BY h.HotelName
UNION 
SELECT (SELECT SUBSTRING(h.HotelName,1,PATINDEX('%[A-Za-z] %', h.HotelName)))AS 'HOTEL', COUNT(SUBSTRING(rm.RoomNumber,1,1)) AS 'NUMBER OF ROOMS', 'Floor 3' AS 'Floor'
FROM HOTEL h
JOIN RACKRATE r
ON h.HotelID = r.HotelID
JOIN ROOMTYPE rr
ON r.RoomTypeID = rr.RoomTypeID
JOIN ROOM rm
ON rr.RoomTypeID = rm.RoomTypeID
WHERE SUBSTRING(h.HotelName,1,PATINDEX('%[A-Za-z] %', h.HotelName)) = 'Weber' AND SUBSTRING(rm.RoomNumber,1,1) = 3
GROUP BY h.HotelName
ORDER BY HOTEL, Floor--[NUMBER OF ROOMS]--Floor

GO

--SELECT (SELECT SUBSTRING(h.HotelName,1,PATINDEX('%[A-Za-z] %', h.HotelName)))AS 'HOTEL'
--FROM HOTEL h
--JOIN RACKRATE r
--ON h.HotelID = r.HotelID
--JOIN ROOMTYPE rr
--ON r.RoomTypeID = rr.RoomTypeID
--JOIN ROOM rm
--ON rr.RoomTypeID = rm.RoomTypeID

--WHERE (SUBSTRING(rm.RoomNumber,1,1)) = 3





--WHERE SUBSTRING(RoomNumber,1,1) = 3
--UNION
--SELECT SUBSTRING(rm.RoomNumber,1,1) AS FLOOR
--FROM HOTEL h
--JOIN RACKRATE r
--ON h.HotelID = r.HotelID
--JOIN ROOMTYPE rr
--ON r.RoomTypeID = rr.RoomTypeID
--JOIN ROOM rm
--ON rr.RoomTypeID = rm.RoomTypeID



--GO
--SELECT 'Floor3'AS 'FloorNumber', COUNT(SUBSTRING(RoomNumber,1,1))
--FROM ROOM
--WHERE SUBSTRING(RoomNumber,1,1) = 3




--SELECT SUBSTRING(HotelName,1,PATINDEX('%[A-Za-z] %', HotelName)) AS 'Hotel'
--FROM HOTEL
--UNION


PRINT '8.) Checkins during June and July '

SELECT h.HotelName, COUNT(f.CheckinDate) AS 'ARRIVALS', AVG(cast(f.nights as float(1))) AS 'AVG NIGHT STAY', DATEPART(month,f.CheckinDate) AS 'MONTH'
FROM FOLIO f
JOIN ROOM r
ON f.RoomID = r.RoomID
JOIN HOTEL h
ON r.HotelID = h.HotelID
WHERE CheckinDate BETWEEN '6/1/16' AND '7/31/16' 
GROUP BY h.HotelName,DATEPART(m,f.CheckinDate)

GO

PRINT 'PROBLEM # 9'

SELECT  (g.GuestLastName + ',' + ' ' + g.GuestFirstName) AS NAME, h.HotelName ,rm.RoomNumber, UPPER(CONVERT(VARCHAR(12), f.CheckinDate, 107)) AS 'ARRIVAL DATE', UPPER(CONVERT(VARCHAR(12),f.CheckinDate + f.Nights, 107)) AS 'DEPARTURE DATE'
FROM GUEST g
JOIN CREDITCARD cc
ON g.GuestID = cc.GuestID
JOIN RESERVATION r
ON cc.CreditCardID = r.CreditCardID
JOIN FOLIO f 
ON r.ReservationID = f.ReservationID
JOIN ROOM rm 
ON f.RoomID = rm.RoomID
JOIN HOTEL h 
ON rm.HotelID = h.HotelID
WHERE DATEPART(WEEKDAY,f.checkindate) > 1 and DATEPART(WEEKDAY,f.checkindate) < 5


PRINT 'PROBLEM # 10' 

UPDATE FOLIO
SET  Status = 'X' , Comments ='less than 48 hours notice', Nights = 1, QuotedRate = QuotedRate -  (SELECT DISTINCT DiscountAmount 
																									FROM DISCOUNT d 
																									JOIN FOLIO f 
																									ON d.DiscountID = f.DiscountID 
																									WHERE f.DiscountID = 10)
WHERE ReservationID = 5020 



--SELECT * 
--FROM FOLIO
--WHERE ReservationID = 5020

--SELECT DISTINCT DiscountAmount 
--FROM DISCOUNT d 
--JOIN FOLIO f 
--ON d.DiscountID = f.DiscountID 
--WHERE f.DiscountID = 10
GO
PRINT 'Problem 10b ' 
GO
CREATE VIEW vw_newRMRate
AS
SELECT (SELECT r.RackRate)+( SELECT t.RoomTaxRate) - (SELECT DISTINCT DiscountAmount 
																									FROM DISCOUNT d 
																									JOIN FOLIO f 
																									ON d.DiscountID = f.DiscountID 
																									WHERE f.DiscountID = 10) AS 'ROOM RATE' 
FROM TAXRATE AS t
JOIN HOTEL AS h
ON t.TaxLocationID = h.TaxLocationID
JOIN RACKRATE r
ON h.HotelID = r.HotelID
JOIN ROOMTYPE rt
ON r.RoomTypeID = rt.RoomTypeID
JOIN ROOM rm
ON rt.RoomTypeID = rm.RoomTypeID
WHERE rm.RoomNumber = 302 AND h.HotelID = 2100 AND RackRateBegin <= '6/26/16' AND RackRateEnd >= '7/31/16'
GO
Print 'Number 10 C' 

INSERT
INTO BILLING ( FolioID, BillingCategoryID, BillingDescription, BillingAmount, BillingItemQty,BillingItemDate)
VALUES(24, 1, 'Cancellation -1 night room', (SELECT [ROOM RATE] FROM vw_newRMRate), 1, GETDATE())
GO
INSERT
INTO BILLING ( FolioID, BillingCategoryID, BillingDescription, BillingAmount, BillingItemQty,BillingItemDate)
VALUES(25, 2, 'Cancellation -1 night Tax', (SELECT [ROOM RATE] FROM vw_newRMRate), 1, GETDATE())
