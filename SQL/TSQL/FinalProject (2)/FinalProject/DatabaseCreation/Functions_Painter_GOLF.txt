-- Student GOLF Creation Script
-- James Painter 
-- Comments

USE Master 

IF EXISTS(SELECT * FROM sysdatabases WHERE name ='Painter_GOLF')
DROP DATABASE Painter_GOLF

GO

CREATE DATABASE Painter_GOLF

ON PRIMARY 

(
NAME = 'Painter_FARMS', 
--FILENAME = 'C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\Painter_GOLF.mdf',
FILENAME = 'C:\Stage\Painter_GOLF.mdf',
SIZE = 4MB, 
MAXSIZE = 4MB,
FILEGROWTH= 500KB
)

LOG ON 

(
NAME = 'Painter_GOLF_Log', 
FILENAME = 'C:\Stage\Painter_GOLF.ldf',
SIZE = 4MB, 
MAXSIZE = 4MB, 
FILEGROWTH = 500KB
)
Go

USE Painter_GOLF

GO

CREATE TABLE GOLF_DISCOUNT
(
	GDiscountID				smallint NOT NULL  IDENTITY(1,1), 
	DiscountDescription		varchar(50) NOT NULL, 
	DiscountExpiration		smalldatetime NOT NULL,
	DiscountRules			varchar(100) NULL, 
	DiscountPercent			decimal(4,2) NULL, 
	DiscountAmount			smallmoney NULL, 

)



CREATE TABLE GOLF_COURSE
(

	GCCourseID		smallint  NOT NULL IDENTITY(1,1),
	GCCourseName	varchar(50) NOT NULL,  
	GCCourseAddress	varchar(50) NOT NULL, 
	GCRating		char(1) NOT NULL, 
	GCCity			varchar(50) NOT NULL, 
	GCState			char(20)	NULL, 
	GCCountry		varchar(50) NOT NULL, 
	GCPostalCode	char(50) NOT NULL, 
	GCPictureLink	varchar(100) NULL,
	DressCode		char(2) NOT NULL 

)


CREATE TABLE BILLING_CATEGORY
(
	BillingCategoryID		smallint	NOT NULL IDENTITY(1,1) , 
	BillingCatDescription	varchar(30) NOT NULL, 
	BillingCatTaxable		bit NOT NULL 

)

CREATE TABLE PACKAGE
(
	PackageID			smallint NOT NULL IDENTITY(1,1), 
	PackageAmount		smallmoney NOT NULL, 
	PackageStartDate	smalldatetime NOT NULL, 
	PackageEndDate		smalldatetime NOT NULL, 
	Rounds				smallint	NOT NULL, 
	PackageDescription	varchar(200) NULL, 
	People				smallint	NULL, 
	GolfClubs			smallint	NULL, 
	CartsRented			smallint	NULL, 
	Caddy				bit		NULL

)
--- TAXRATE Table FROM Painter_FARMS DATBASE

CREATE TABLE TAXRATE
(

	TaxLocationID		smallint NOT NULL IDENTITY(1,1), 
	TaxDescription		varchar(30) NOT NULL,	
	RoomTaxRate			decimal(6,4) NOT NULL, 
	SalesTaxRate		decimal(6,4) NOT NULL, 
	TeeTimeTaxRate		decimal(6,4) NOT NULL

)

--- Hotel Table FROM Painter_FARMS DATBASE

CREATE TABLE HOTEL
(
HotelID				smallint NOT NULL, 
HotelName			varchar(30) NOT NULL, 
HotelAddress		varchar(30) NOT NULL, 
HotelCity			varchar(20)	NOT NULL, 
HotelState			varchar(2)	NULL, 
HotelCountry		varchar(20) NOT NULL, 
HotelPostalCode		char(10) NOT NULL, 
HotelStarRating		char(1) NULL, 
HotelPictureLink	varchar(100) NULL, 
TaxLocationID		smallint NOT NULL
)

CREATE TABLE GOLF_PLAYER
(
PlayerID			smallint NOT NULL IDENTITY(1,1), 
PlayerFirstName		varchar(20) NOT NULL, 
PlayerLastName		varchar(20) NOT NULL,
GuestID				smallint	NOT NULL, 
Handicap			smallint	NULL, 
PlayerAddress		varchar(50) NOT NULL, 
PlayerCity			varchar(50) NOT NULL, 
PlayerPostalCode	char(10) NOT NULL, 
PlayerCountry		varchar(50) NOT NULL, 
PlayerPhone			varchar(50) NOT NUll 

)




CREATE TABLE GOLF_FOLIO 
(

	GFolioID			smallint NOT NULL IDENTITY(1,1),
	HotelID				smallint NOT NULL,
	PlayerID			smallint NOT NULL,   
	QuotedRate			smallmoney NOT NULL, 
	TeeTimeCheckinDate	smalldatetime NOT NULL, 
	Status				char(1)	NOT NULL, 
	Comments			varchar(200) NULL, 
	GolfingDays			smallint	NOT NULL, 
	GDiscountID			smallint	NOT NULL

)



CREATE TABLE BILLING_DETAILS
(
	GFolioBillingID		smallint  NOT NULL IDENTITY(1,1), 
	GFolioID			smallint  NOT NULL, 
	BillingCategoryID	smallint  NOT NULL, 
	BillingDescription	varchar(30) NOT NULL, 
	BillingAmount		smallmoney	NOT NULL, 
	BillingItemQTY		smallint NOT NULL,
	BillingItemDate		smalldatetime NOT NULL

)


CREATE TABLE TEE_TIME 
(

	TeeTimeID			smallint NOT NULL IDENTITY(1,1), 
	PackageID			smallint NOT NULL, 
	GCCourseID			smallint NOT NULL, 
	TeeTimeAmount		smallmoney NOT NULL, 
	TeeTimeStartTime	smalldatetime NOT NULL, 
	TeeTimeEndTime		smalldatetime NOT NULL, 
	TeeTimeDescription	char(3)	NOT NULL,
	AppropriateDressCode char(1) NOT NULL
	

)




CREATE TABLE TEE_TIME_DETAILS
(
	TeeTimeDetailID		smallint NOT NULL IDENTITY(1,1),
	GFolioID			smallint NOT NULL,  
	TeeTimeID			smallint NOT NULL,  
	TeeTimeDetailDate	smalldatetime NOT NULL, 
	TeeTimeNumber		smallint NOT NULL
)




CREATE TABLE CART_DETAILS
(

	CartDetailID	smallint NOT NULL IDENTITY(1,1), 
	PackageID		smallint NOT NULL, 
	CartID			smallint NOT NULL, 
	CartResDate		smalldatetime NOT NULL, 
	CartStartTime   smalldatetime NOT NULL, 
	CartEndDate		smalldatetime	NOT NULL, 
	CartNumber		smallint		NOT NULL -- Number of Carts

)


CREATE TABLE CART
(
	CartID			smallint NOT NULL IDENTITY(1,1), 
	CartAmount		smallmoney NOT NULL, 
	CartCondition	char(1) NOT NULL --(p,f,g,e)

)


-- Create Primary Keys

ALTER TABLE GOLF_DISCOUNT
	ADD CONSTRAINT PK_GDiscountID
	PRIMARY KEY		(GDiscountID) 

ALTER TABLE	GOLF_COURSE 
	ADD CONSTRAINT PK_GCCourseID
	PRIMARY KEY		(GCCourseID)

ALTER TABLE BILLING_CATEGORY
	ADD CONSTRAINT PK_BillingCategory
	PRIMARY KEY		(BillingCategoryID)

-- TAXRATE TABLE FROM PAINTER_FARMS DATABASE 
ALTER TABLE TAXRATE
	ADD CONSTRAINT PK_TRTaxLocationID
	PRIMARY KEY (TaxLocationID)

--- Hotel Table FROM Painter_FARMS DATBASE
ALTER TABLE HOTEL
	ADD CONSTRAINT PK_HHotelID
	PRIMARY KEY	(HotelID) 



ALTER TABLE GOLF_FOLIO
	ADD CONSTRAINT	PK_GFolioID
	PRIMARY KEY (GFolioID)


ALTER TABLE BILLING_DETAILS
	ADD CONSTRAINT PK_GFolioBillingID
	PRIMARY KEY (GFolioBillingID) 

ALTER TABLE TEE_TIME
	ADD CONSTRAINT PK_TeeTimeID
	PRIMARY KEY (TeeTimeID) 

ALTER TABLE PACKAGE 
	ADD CONSTRAINT PK_PackageID
	PRIMARY KEY (PackageID) 

ALTER TABLE TEE_TIME_DETAILS
	ADD CONSTRAINT PK_TeeTimeDetailID
	PRIMARY KEY (TeeTimeDetailID)


ALTER TABLE CART_DETAILS
	ADD CONSTRAINT PK_CartDetailID
	PRIMARY KEY (CartDetailID) 

ALTER TABLE CART
	ADD CONSTRAINT PK_CartID
	PRIMARY KEY (CartID)

ALTER TABLE GOLF_PLAYER
	ADD CONSTRAINT PK_PlayerID
	PRIMARY KEY (PlayerID)

-- CREATE FOREIGN KEYS 


--- Hotel Table FROM Painter_FARMS DATBASE
ALTER TABLE HOTEL
ADD
CONSTRAINT FK_HTaxLocationID
FOREIGN KEY (TaxLocationID)	REFERENCES TAXRATE (TaxLocationID)
ON UPDATE Cascade
ON DELETE Cascade




ALTER TABLE GOLF_FOLIO
ADD
CONSTRAINT FK_HotelID
FOREIGN KEY (HotelID) REFERENCES HOTEL (HotelID)
ON UPDATE CASCADE
ON DELETE CASCADE,


CONSTRAINT FK_GDiscountID
FOREIGN KEY (GDiscountID) REFERENCES GOLF_DISCOUNT (GDiscountID)
ON UPDATE CASCADE
ON DELETE CASCADE, 

CONSTRAINT FK_PlayerID
FOREIGN KEY (PlayerID) REFERENCES GOLF_PLAYER (PlayerID)
ON UPDATE CASCADE
ON DELETE CASCADE


ALTER TABLE TEE_TIME 
ADD 
CONSTRAINT FK_GCCourseID
FOREIGN KEY (GCCourseID) REFERENCES GOLF_COURSE (GCCourseID)
ON UPDATE CASCADE
ON DELETE CASCADE,


CONSTRAINT FK_PackageID
FOREIGN KEY (PackageID) REFERENCES PACKAGE (PackageID)
ON UPDATE CASCADE
ON DELETE CASCADE


ALTER TABLE BILLING_DETAILS
ADD
CONSTRAINT FK_BDGFolioID
FOREIGN KEY (GFolioID) REFERENCES GOLF_FOLIO (GFolioID)
ON UPDATE CASCADE
ON DELETE CASCADE,

CONSTRAINT FK_BillingCategoryID
FOREIGN KEY (BillingCategoryID) REFERENCES BILLING_CATEGORY (BillingCategoryID)
ON UPDATE CASCADE
ON DELETE CASCADE

ALTER TABLE TEE_TIME_DETAILS
ADD
CONSTRAINT FK_TTGFolioID
FOREIGN KEY (GFolioID) REFERENCES GOLF_FOLIO (GFolioID)
ON UPDATE CASCADE
ON DELETE CASCADE, 

CONSTRAINT FK_TTTeeTimeID
FOREIGN KEY (TeeTimeID) REFERENCES TEE_TIME (TeeTimeID)
ON UPDATE CASCADE
ON DELETE CASCADE 


ALTER TABLE CART_DETAILS 
ADD 
CONSTRAINT FK_CDPackageID
FOREIGN KEY (PackageID) REFERENCES PACKAGE (PackageID)
ON UPDATE CASCADE
ON DELETE CASCADE, 

CONSTRAINT FK_CDCartID
FOREIGN KEY (CartID) REFERENCES CART (CartID) 
ON UPDATE CASCADE 
ON DELETE CASCADE




-- Check and Balances 

ALTER TABLE GOLF_FOLIO
ADD CONSTRAINT CK_GFStatus
CHECK(Status IN ('R','D','C','L','X')) -- R- Reserved, D - Drop Reservation, C - Complete, L- Late, X - NO SHOW 

ALTER TABLE TEE_TIME
ADD CONSTRAINT CK_TeeTimeDescription
CHECK(TeeTimeDescription IN ('F9','B9','18')) -- F9 - Front Nine Holes, B9- Back Nine Holes, 18 - 18 holes

ALTER TABLE TEE_TIME
ADD CONSTRAINT CK_TeeTimeDressCode
CHECK(TeeTimeDescription IN ('A','N'))  -- A - Appropriate, N - Non - Appropriate 


ALTER TABLE CART 
ADD CONSTRAINT CK_CartCondition
CHECK(CartCondition IN ('p','f','g','e')) -- p - poor, f - fair, g - good, e - excellent

ALTER TABLE GOLF_COURSE 
ADD CONSTRAINT CK_DressCode 
CHECK (DressCode IN ('C','GA','PA')) -- c - Casual , GA - Golf Attire, PA - Professional Attire  


GO 

--BULK INSERT 
BULK INSERT TAXRATE FROM 'C:\stage\TaxRate.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)
BULK INSERT HOTEL FROM 'C:\stage\Hotel.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)
BULK INSERT GOLF_FOLIO FROM 'C:\stage\GOLFFolio.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)
BULK INSERT GOLF_PLAYER FROM 'C:\stage\GOLF_Player.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)
BULK INSERT GOLF_DISCOUNT FROM 'C:\stage\Golf_Discount.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)
BULK INSERT BILLING_DETAILS FROM 'C:\stage\BILLING_DETAILS.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)
BULK INSERT BILLING_CATEGORY FROM 'C:\stage\BILLING_CATEGORY.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)
BULK INSERT TEE_TIME_DETAILS FROM 'C:\stage\TEE_TIME_DETAILS.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)
BULK INSERT TEE_TIME FROM 'C:\stage\TeeTime.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)
BULK INSERT GOLF_COURSE FROM 'C:\stage\Golf_Course.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)
BULK INSERT Package FROM 'C:\stage\Package.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)
BULK INSERT Cart_Details FROM 'C:\stage\Cart_Details.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)
BULK INSERT Cart FROM 'C:\stage\Cart.txt' WITH (FIELDTERMINATOR='|',FIRSTROW=1)

use Painter_GOLF
Go


USE MASTER
GO		
Exec sp_addlinkedserver
@server='TITAN_PAINTER',
@srvproduct='',
/*this is the product name of the OLE DB data source to add as a linked server.*/
@provider='MSDASQL',
@provstr='DRIVER={SQL Server};SERVER=titan.cs.weber.edu,10433;UID=JamesPainter;PWD=Rpaint14;Initial Catalog=Painter_FARMS' --Note I created this user for my hotel database.
GO
Exec sp_serveroption 'TITAN_PAINTER', 'data access', 'true'
Exec sp_serveroption 'TITAN_PAINTER', 'rpc', 'true'--enables from the REMOTE to LOCAL server
Exec sp_serveroption 'TITAN_PAINTER', 'rpc out', 'true' -- enables from the LOCAL to REMOTE server
Exec sp_serveroption 'TITAN_PAINTER', 'collation compatible', 'true'
GO
Exec sp_addlinkedsrvlogin 'TITAN_PAINTER', 'true'
GO
Exec sp_addlinkedsrvlogin
@rmtsrvname='TITAN', --this is the name of the linked server
@useself='false',--True means that sql server logins are used, false means that the rmtuser and rmtpassword are used
--@locallogin='Rich\Rich-Fry',
 --login on the local server, default is NULL.
@rmtuser='JamesPainter', --name of the remote user
@rmtpassword='Rpainter' --remote user password
GO
sp_configure 'show advanced options', 1
reconfigure
GO

sp_configure 'Ad Hoc Distributed Queries', 1
reconfigure
GO
USE Painter_GOLF
GO 
SELECT * 
FROM OPENQUERY(TITAN_PAINTER, 'SELECT * FROM Painter_Farms.dbo.GUEST')AS passthrough

GO
IF EXISTS(SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_NAME = 'sp_GuestLookup')
	DROP PROCEDURE sp_GuestLookup
GO

CREATE PROCEDURE sp_GuestLookup
--variables 
	@FirstName varchar(20),
	@LastName	varchar(20)
AS
BEGIN 
		 
			
				SELECT * 
				FROM OPENQUERY(TITAN_PAINTER, 'SELECT * FROM Painter_Farms.dbo.GUEST')AS passthrough
			

END  

GO

CREATE TRIGGER tr_PlayerNameLookup ON GOLF_PLAYER
AFTER UPDATE, INSERT 
AS 
DECLARE @FirstName varchar(20)
DECLARE @LastName	varchar(20) 
IF EXISTS (SELECT '' 
			FROM inserted i 
			)

BEGIN
SELECT @FirstName = (SELECT PlayerFirstName FROM inserted)
SELECT @LastName = (SELECT PlayerLastName FROM inserted)
EXEC sp_GuestLookup @FirstName, @LastName




END

GO 
USE Painter_GOLF

INSERT INTO GOLF_PLAYER
VALUES('Ted', 'COWAN',1524,32, '4462 Maybeck Place','Provo', '84601', 'USA', '801-957-4769')